@model IEnumerable<ManagementTool.Roles.ViewModels.TrackingTaskViewModel>
@{
    ViewBag.Title = "All Tasks";
}
<p class="create-task__title">
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr class="table-font">
        <th class="table-font">
            @Html.DisplayNameFor(model => model.ProjectName)
        </th>
        <th class="table-font">
            @Html.DisplayNameFor(model => model.TaskName)
        </th>
        <th class="table-font">
            @Html.DisplayNameFor(model => model.TaskDescription)
        </th>
        <th class="table-font">
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th class="table-font">
            @Html.DisplayNameFor(model => model.TillDate)
        </th>
        <th class="table-font">
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th class="table-font">
            Progress
        </th>
        <th class="table-font">
            @Html.DisplayNameFor(model => model.Priority)
        </th>
        <th class="table-font">
            @Html.DisplayNameFor(model => model.ApplicationUserDetails)
        </th>
        <th class="table-font">
            Actions
        </th>
    </tr>



    @foreach (var item in Model)
    {
        <tr class="table-font">
            <td class="table-font">
                @Html.DisplayFor(modelItem => item.ProjectName)

            </td>
            <td class="table-font">
                @Html.DisplayFor(modelItem => item.TaskName)
            </td>
            <td class="table-font">
                @Html.DisplayFor(modelItem => item.TaskDescription)
            </td>
            <td class="table-font">
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td class="table-font">
                @Html.DisplayFor(modelItem => item.TillDate)
            </td>
            <td class="table-font">
                <div class="status-state" data-title="@Html.DisplayFor(modelItem => item.Id)" data-content="@Html.DisplayFor(modelItem => item.ParentId)">
                    @Html.DisplayFor(modelItem => item.Status)
                </div>

            </td>
            <td class="table-font">
                <div class="progress id-@Html.DisplayFor(modelItem => item.Id)">
                    <div class="progress-bar" role="progressbar" aria-valuenow="100"
                         aria-valuemin="0" aria-valuemax="100" style="width:@Html.DisplayFor(modelItem => item.Progress)">
                        <!--TODO: to change value of width-->
                        @Html.DisplayFor(modelItem => item.Progress) <!---TODO: change value of this number-->
                    </div>
                </div>
            </td>

            <td class="table-font">
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td class="table-font">
                @Html.DisplayFor(modelItem => item.ApplicationUserDetails)
            </td>

            @if (item.ParentId != 0)
            {
                <td class="action_title">
                    @Html.ActionLink("AddSubTask", "CreateSubTask", new { id = item.Id }) |
                    @Html.ActionLink("EditSubtask", "EditSubtask", new { id = item.Id }) |
                    @Html.ActionLink("SubtaskDetails", "SubtaskDetails", new { id = item.Id }) |
                    @Html.ActionLink("DeleteSubtask", "DeleteSubtask", new { id = item.Id })

                </td>
            }
            else
            {
                <td class="action_title">
                    @Html.ActionLink("AddSubTask", "CreateSubTask", new { id = item.Id }) |
                    @Html.ActionLink("AssignUser", "AssignUser", new { id = item.Id }) |
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })

                </td>
            }

        </tr>
    }

</table>
@*</div>*@
<script type="module" src="~/Scripts/script.js" crossorigin="anonymous">
</script>

