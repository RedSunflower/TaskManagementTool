@model ManagementTool.Roles.ViewModels.TrackingTaskViewModel

@{
    ViewBag.Title = "CreateSubTask";
}

<h2 class="table-font">Add subtasks</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ParentId)
    @Html.HiddenFor(model => model.ProjectName)
    @Html.HiddenFor(model => model.ApplicationUserDetails)
    <div class="form-group table-font">
        @Html.LabelFor(model => model.TaskName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 table-font">
            @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group table-font">
        @Html.LabelFor(model => model.TaskDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 table-font">
            @Html.EditorFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group table-font">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 table-font">
            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group table-font">
        @Html.LabelFor(model => model.TillDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 table-font">
            @Html.EditorFor(model => model.TillDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TillDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group table-font">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 table-font">
            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group table-font">
        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 table-font">
            @Html.EnumDropDownListFor(model => model.Priority, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
            @Html.LabelFor(model => model.Progress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Progress, new SelectList(ViewBag.ProgressList, "Value", "Text", ViewBag.ProgressList), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Progress, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group table-font">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            <input type="button" value="Back to List" onclick="location.href='@Url.Action("Index")'" class="btn btn-default action_title" />
        </div>
    </div>
</div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}